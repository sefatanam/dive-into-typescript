{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig to read more about this file */
    /* Projects */
    "composite": true, /* Enable constraints that allow a TypeScript project to be used with project references. */
    /* Language and Environment */
    "target": "ESNext", /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "experimentalDecorators": true, /* Enable experimental support for legacy experimental decorators. */
    "emitDecoratorMetadata": true, /* Emit design-type metadata for decorated declarations in source files. */
    /* Modules */
    "module": "NodeNext",
    "resolveJsonModule": true, /* Enable importing .json files. */
    /* Emit */
    "declaration": true, /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
    "declarationMap": true, /* Create sourcemaps for d.ts files. */
    "sourceMap": true, /* Create source map files for emitted JavaScript files. */
    "baseUrl": "./",
    "removeComments": true, /* Disable emitting comments. */
    "newLine": "crlf", /* Set the newline character for emitting files. */
    /* Interop Constraints */
    "esModuleInterop": true, /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true, /* Ensure that casing is correct in imports. */
    /* Type Checking */
    "strict": true, /* Enable all strict type-checking options. */
    "noImplicitAny": true, /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    "strictNullChecks": true, /* When type checking, take into account 'null' and 'undefined'. */
    "strictFunctionTypes": true, /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
    "strictBindCallApply": true, /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */
    "strictPropertyInitialization": true, /* Check for class properties that are declared but not set in the constructor. */
    "strictBuiltinIteratorReturn": true, /* Built-in iterators are instantiated with a 'TReturn' type of 'undefined' instead of 'any'. */
    "noImplicitThis": true, /* Enable error reporting when 'this' is given the type 'any'. */
    "useUnknownInCatchVariables": true, /* Default catch clause variables as 'unknown' instead of 'any'. */
    "alwaysStrict": true, /* Ensure 'use strict' is always emitted. */
    "noUnusedLocals": true, /* Enable error reporting when local variables aren't read. */
    "noUnusedParameters": true, /* Raise an error when a function parameter isn't read. */
    "exactOptionalPropertyTypes": true, /* Interpret optional property types as written, rather than adding 'undefined'. */
    "noImplicitReturns": true, /* Enable error reporting for codepaths that do not explicitly return in a function. */
    "noFallthroughCasesInSwitch": true, /* Enable error reporting for fallthrough cases in switch statements. */
    "noUncheckedIndexedAccess": true, /* Add 'undefined' to a type when accessed using an index. */
    "noImplicitOverride": true, /* Ensure overriding members in derived classes are marked with an override modifier. */
    "noPropertyAccessFromIndexSignature": true, /* Enforces using indexed accessors for keys declared using an indexed type. */
    "allowUnusedLabels": true, /* Disable error reporting for unused labels. */
    "allowUnreachableCode": true, /* Disable error reporting for unreachable code. */
    /* Completeness */
    "skipLibCheck": true,
    "customConditions": [
      "development"
    ]
  }
}